nfc experiments on ROCK PI 4B board.

nfc host controller card: Adafruit PN532 NFC Shield

The following 8 tests are included:
1. iso14443a_uid  ( read nfc card's uid )
2. memdump        ( dump all memory in the nfc cards )
3. readMifare     ( write read memory in the nfc cards )
4. ntag21x_rw     ( write read mifareultralight )
5. memerase       ( erase all memory in the nfc cards )
6. formatndef     ( change mifareclassic to mifareclassic_ndef )
7. updatendef     ( write read mifareclassic_ndef )
8. ndeftoclassic  ( change mifareclassic_ndef to mifareclassic )

-------------------------------------------------------------------

To compile and flash to sd card:

cd ~/rockpi4b-python-pn532nfc
Download OS:
wget https://dl.radxa.com/rockpi/images/debian/rockpi4-debian-stretch-desktop-arm64-20190730_2022-gpt.img.gz
gunzip rockpi4-debian-stretch-desktop-arm64-20190730_2022-gpt.img.gz
Use balenaEtcher to burn img to sd card.
eject sd card.
Plugin sd card to PC.
sudo mkdir /media/$USER/tmp
sudo mount -t vfat /dev/mmcblk0p4 /media/$USER/tmp
sudo cp hw_intfc.conf /media/$USER/tmp
sync
sudo umount /media/$USER/tmp
eject sd card.
Plugin the sd card to ROCK PI 4B board
Connect gpio Pin 8 to serial USB cable TX.
Connect gpio pin 10 to serial USB cable RX. 
Connect gpio pin 39 to serial USB cable ground. 
Type "script ~/outputfile.txt" on PC.
Plugin serial USB cable to PC.
Type "sudo screen /dev/ttyUSB0 1500000" on PC.
Power on ROCK PI 4B board
sudo dmesg -n 1
sudo vi /etc/rc.local ( add sudo dmesg -n 1 )
sudo dpkg-reconfigure tzdata  US/Pacific-New
setup wifi:
nmcli dev wifi list
sudo nmcli con add con-name WiFi ifname wlan0 type wifi ssid mywifissid
sudo nmcli con modify WiFi wifi-sec.key-mgmt wpa-psk
sudo nmcli con modify WiFi wifi-sec.psk mypassword
sudo nmcli con up WiFi
date
sudo ifconfig
sudo shutdown -h now
Power off ROCK PI 4B board.
Unplug serial USB cable from PC.
Type "exit" on PC.
Power on ROCK PI 4B board.
ssh linaro@192.168.86.xxx  ( The original password is "linaro" )
passwd
vi nosleep.sh ( add following line to disable sleep feature )
sudo systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target
./nosleep.sh
date
sudo ifconfig
lsb_release -a
wget -O - apt.radxa.com/stretch/public.key | sudo apt-key add -
sudo apt-get update
sudo apt-get upgrade
sync
sudo reboot
sudo apt-get install python-dev python-pip python-setuptools python3-dev python3-pip python3-setuptools dnsutils apache2 vsftpd ftp build-essential git libssl-dev nmap net-tools dkms libncurses5-dev libncursesw5-dev i2c-tools
sudo pip3 install python-periphery
sudo pip3 install smbus2
sudo i2cdetect -y 7
sudo cat /proc/device-tree/spi@ff1e0000/status  ( spi 2 )
sudo cat /proc/device-tree/i2c@ff160000/status  ( i2c-7 )
if disabled, you need to fix /boot/hw_intfc.conf and reboot.
intfc:i2c7=on
intfc:spi2=on
intfc:dtoverlay=console-on-ttyS2
intfc:dtoverlay=devspi2

Datasheet of pn532 in https://www.nxp.com/docs/en/nxp/data-sheets/PN532_C1.pdf
application: https://www.nxp.com/docs/en/user-guide/141520.pdf
https://raspberrypi.stackexchange.com/questions/109773/how-can-rpi-spi-python-read-the-mfrc522-nfc-module
NFC info see https://www.nxp.com/docs/en/application-note/AN1305.pdf
             https://www.nxp.com/docs/en/application-note/AN1304.pdf
             https://www.nxp.com/docs/en/data-sheet/MF0ICU2.pdf
examples: see https://github.com/nfc-tools/libfreefare/
Tutorial: see https://learn.adafruit.com/adafruit-pn532-rfid-nfc/mifare

-------------------------------------------------------------------------

Here are the summary of the tests: ( see https://wiki.radxa.com/Rockpi4/hardware/gpio )

These tests used Adafruit PN532 NFC Shield.
To use Adafruit PN532 NFC Shield see https://learn.adafruit.com/adafruit-pn532-rfid-nfc

-------------------------------------------------------------------------

Here are the procedure to test the above 8 tests:

For spi:
Connect gpio pin 29 to pn532 MOSI.
Connect gpio pin 33 to pn532 SSEL.
Connect gpio pin 31 to pn532 MISO.
Connect gpio pin 7 to pn532 SCK.
Connect gpio pin 2 to pn532 5V.
Connect gpio pin 9 to pn532 ground.

For i2c:
Connect gpio pin 3 to pn532 SDA
Connect gpio pin 5 to pn532 SCL
Connect gpio pin 2 to pn532 5V.
Connect gpio pin 9 to pn532 ground.

git clone https://github.com/chenphilip888/rockpi4b-python-pn532nfc.git
cd ~/rockpi4b-python-pn532nfc
For spi:
change *.py file to use SPI ( from pn532_spi import * )
For i2c:
change *.py file to use I2C ( from pn532_i2c import * )

sudo python3 iso14443a_uid.py   ( for mifareclassic and mifareultralight )
sudo python3 memdump.py         ( for mifareclassic and mifareultralight )
sudo python3 readMifare.py      ( for mifareclassic and mifareultralight )
sudo python3 memdump.py         ( for mifareclassic and mifareultralight )
sudo python3 ntag21x_rw.py      ( for mifareultralight )
sudo python3 memdump.py         ( for mifareultralight )
sudo python3 memerase.py        ( for mifareclassic and mifareultralight )
sudo python3 memdump.py         ( for mifareclassic and mifareultralight )
sudo python3 formatndef.py      ( for mifareclassic )
sudo python3 memdump.py         ( for mifareclassic )
sudo python3 updatendef.py      ( for mifareclassic )
sudo python3 memdump.py         ( for mifareclassic )
sudo python3 memerase.py        ( for mifareclassic )
sudo python3 memdump.py         ( for mifareclassic )
sudo python3 ndeftoclassic.py   ( for mifareclassic )
sudo python3 memdump.py         ( for mifareclassic )
sudo python3 readMifare.py      ( for mifareclassic )
sudo python3 memdump.py         ( for mifareclassic )
sudo python3 memerase.py        ( for mifareclassic )
sudo python3 memdump.py         ( for mifareclassic )

When done all tests:
sudo shutdown -h now
Power off ROCK PI 4B board.

-----------------------------------------------------------------------------
